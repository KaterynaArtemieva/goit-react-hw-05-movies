{"version":3,"file":"static/js/136.fe822c77.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","fetchAPI/fetchAPI.js","pages/Styled/Movies.styled.js","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const Item = styled.li`\n  padding-bottom: 10px;\n  width: calc((100% - 100px) / 4);\n  border: 1px solid black;\n  border-radius: 4px;\n  overflow: hidden;\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  width: 100%;\n  display: inline-block;\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n  color: black;\n  padding: 0 8px;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  margin: 0 auto;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, ItemLink, Title, Img } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const noImage =\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRoiEg5RfmS0fd3YtmigKUmpnOJLADj5b_Hd1-Ek6WV0YT9zQV-slUKmbdT1WvDklge3RU&usqp=CAU';\n  return (\n    <List>\n      {movies.map(({ id, title, url }) => (\n        <Item key={id}>\n          <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n            <Img\n              src={\n                url ? `https://image.tmdb.org/t/p/w500/${url}` : `${noImage}`\n              }\n              alt={title}\n              width=\"300\"\n            />\n            <Title>{title}</Title>\n          </ItemLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      url: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'd3bfd9e3078e7fbc5691e64e118089ee';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios('trending/movie/week', {\n    params: { api_key: KEY },\n  });\n  return data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    url: poster_path,\n  }));\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios('search/movie', {\n    params: { api_key: KEY, query },\n  });\n  return data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    url: poster_path,\n  }));\n};\n\nexport const fetchMovieById = async (movieId, endpoint) => {\n  const response = await axios(`movie/${movieId}${endpoint}`, {\n    params: { api_key: KEY },\n  });\n\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: 500;\n  color: white;\n  background-color: orangered;\n  border: none;\n  margin-left: 8px;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchMoviesByQuery } from 'fetchAPI/fetchAPI';\nimport { Box } from 'components/Box/Box.styled';\nimport { Form, Input, Button } from './Styled/Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('searchQuery') ?? '';\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ searchQuery });\n    setMovies([]);\n    setError(null);\n  };\n\n  const onInput = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    const getMovies = async query => {\n      setIsLoading(true);\n      try {\n        const movies = await fetchMoviesByQuery(query);\n        if (!movies.length) {\n          throw new Error('Oops!');\n        }\n        setMovies(movies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (query) {\n      getMovies(query);\n    }\n  }, [query]);\n\n  return (\n    <Box>\n      <Form onSubmit={onFormSubmit}>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          value={searchQuery}\n          onChange={onInput}\n        />\n        <Button>Search</Button>\n      </Form>\n      {isLoading && <Loader />}\n      {error && (\n        <p>\n          Sorry! We didn't find anything on your query! Change search params and\n          try again!\n        </p>\n      )}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </Box>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","Item","ItemLink","Link","Title","Img","MoviesList","movies","location","useLocation","map","id","title","url","to","state","from","src","alt","width","axios","KEY","fetchTrendingMovies","params","api_key","data","results","poster_path","fetchMoviesByQuery","query","fetchMovieById","movieId","endpoint","response","Form","Input","Button","useState","setMovies","isLoading","setIsLoading","error","setError","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","get","useEffect","getMovies","length","Error","message","onSubmit","event","preventDefault","type","name","value","onChange","e","target","Loader"],"sourceRoot":""}