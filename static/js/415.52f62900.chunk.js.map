{"version":3,"file":"static/js/415.52f62900.chunk.js","mappings":"oMAIaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,IAAd,OAEV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,WACE,gBACES,IACEJ,EAAG,0CAAsCA,GAAtC,UATf,wIAWUK,IAAKN,EACLO,MAAM,SAER,wBAAKP,QATAD,EAFC,KAiBjB,C,+ICzBDS,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAmB,mCAAG,uGACVF,EAAAA,EAAAA,GAAM,sBAAuB,CAClDG,OAAQ,CAAEC,QAASH,KAFY,uBACzBI,EADyB,EACzBA,KADyB,kBAI1BA,EAAKC,QAAQhB,KAAI,kBAAiC,CAAEC,GAAnC,EAAGA,GAAoCC,MAAvC,EAAOA,MAAuCC,IAA9C,EAAcc,YAAd,KAJS,2CAAH,qDAOnBC,EAAkB,mCAAG,WAAMC,GAAN,0FACTT,EAAAA,EAAAA,GAAM,eAAgB,CAC3CG,OAAQ,CAAEC,QAASH,EAAKQ,MAAAA,KAFM,uBACxBJ,EADwB,EACxBA,KADwB,kBAIzBA,EAAKC,QAAQhB,KAAI,kBAAiC,CAAEC,GAAnC,EAAGA,GAAoCC,MAAvC,EAAOA,MAAuCC,IAA9C,EAAcc,YAAd,KAJQ,2CAAH,sDAOlBG,EAAc,mCAAG,WAAOC,EAASC,GAAhB,wFACLZ,EAAAA,EAAAA,GAAM,SAAD,OAAUW,GAAV,OAAoBC,GAAY,CAC1DT,OAAQ,CAAEC,QAASH,KAFO,cACtBY,EADsB,yBAKrBA,EAASR,MALY,2CAAH,uD,kHCiB3B,UA9Ba,WACX,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAO3B,EAAP,KAAe4B,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,GAAa,GADf,mBAGiCf,EAAAA,EAAAA,MAHjC,OAGUmB,EAHV,OAIIN,EAAUM,GAJd,gDAMIF,EAAS,KAAMG,SANnB,yBAQIL,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdM,EACD,GAAE,KAGD,4BACE,wBAAI,mBACHP,IAAa,SAAC,IAAD,IACb7B,EAAOqC,OAAS,IAAK,SAAC,IAAD,CAAYrC,OAAQA,IACzC+B,IAAS,uBAAG,2DAGlB,C","sources":["components/MoviesList/MoviesList.jsx","fetchAPI/fetchAPI.js","pages/Home.jsx"],"sourcesContent":["import { useLocation } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const noImage =\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRoiEg5RfmS0fd3YtmigKUmpnOJLADj5b_Hd1-Ek6WV0YT9zQV-slUKmbdT1WvDklge3RU&usqp=CAU';\n  return (\n    <ul>\n      {movies.map(({ id, title, url }) => (\n\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={\n                url ? `https://image.tmdb.org/t/p/w500/${url}` : `${noImage}`\n              }\n              alt={title}\n              width=\"300\"\n            />\n            <h3>{title}</h3>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n// MoviesList.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       title: PropTypes.string.isRequired,\n//       url: PropTypes.string,\n//     })\n//   ).isRequired,\n// };","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'd3bfd9e3078e7fbc5691e64e118089ee';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios('trending/movie/week', {\n    params: { api_key: KEY },\n  });\n  return data.results.map(({ id, title, poster_path }) => ({ id, title, url: poster_path }));\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios('search/movie', {\n    params: { api_key: KEY, query },\n  });\n  return data.results.map(({ id, title, poster_path }) => ({ id, title, url: poster_path }));\n};\n\nexport const fetchMovieById = async (movieId, endpoint) => {\n  const response = await axios(`movie/${movieId}${endpoint}`, {\n    params: { api_key: KEY },\n  });\n\n  return response.data;\n};","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'fetchAPI/fetchAPI';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\n// import { MainContainer } from 'utils/GlobalStyle';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function getMovies() {\n      setIsLoading(true);\n      try {\n        const trendingMovies = await fetchTrendingMovies();\n        setMovies(trendingMovies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n      {isLoading && <Loader />}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {error && <p>Oops! We have some tech problems, please, try later!</p>}\n    </div>\n  );\n};\n\nexport default Home;"],"names":["MoviesList","movies","location","useLocation","map","id","title","url","to","state","from","src","alt","width","axios","KEY","fetchTrendingMovies","params","api_key","data","results","poster_path","fetchMoviesByQuery","query","fetchMovieById","movieId","endpoint","response","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","trendingMovies","message","getMovies","length"],"sourceRoot":""}