{"version":3,"file":"static/js/504.78582444.chunk.js","mappings":"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","sources":["fetchAPI/fetchAPI.js","hooks/useFetchMovieInfo.js","components/Movie/Movie.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'd3bfd9e3078e7fbc5691e64e118089ee';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios('trending/movie/week', {\n    params: { api_key: KEY },\n  });\n  return data.results.map(({ id, title, poster_path }) => ({ id, title, url: poster_path }));\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios('search/movie', {\n    params: { api_key: KEY, query },\n  });\n  return data.results.map(({ id, title, poster_path }) => ({ id, title, url: poster_path }));\n};\n\nexport const fetchMovieById = async (movieId, endpoint) => {\n  const response = await axios(`movie/${movieId}${endpoint}`, {\n    params: { api_key: KEY },\n  });\n\n  return response.data;\n};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieById } from 'fetchAPI/fetchAPI';\n\nexport default function useFetchMovieInfo (endpoint = '') {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovie = async movieId => {\n      setIsLoading(true);\n      try {\n        const movieDetails = await fetchMovieById(movieId, endpoint);\n        setMovieInfo(movieDetails);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovie(movieId);\n  }, [movieId, endpoint]);\n\n  return { movieInfo, isLoading, error };\n};","import { useLocation, useNavigate } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// import {\n//   MovieCard,\n//   ImageWrapper,\n//   Text,\n//   Btn,\n//   StyledLink,\n//   LinkList,\n//   LinkItem,\n// } from './Movie.styled';\n// import { MainContainer } from 'utils/GlobalStyle';\nimport { Link } from 'react-router-dom';\n\nexport const Movie = ({ movie }) => {\n  const { title, release_date, overview, poster_path, vote_average, genres } =\n    movie;\n  const location = useLocation();\n  const navigation = useNavigate();\n  const onBtnClick = () => {\n    navigation(location?.state?.from ?? '/');\n  };\n\n  return (\n    <div>\n      <button type=\"button\" onClick={onBtnClick}>\n        Go back\n      </button>\n      <div>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n          />\n        </div>\n        <div>\n          <h2>\n            {title} ({new Date(release_date).getFullYear()})\n          </h2>\n          <p>User score: {Math.round(vote_average * 10)} %</p>\n          <h3>Genres</h3>\n          <p>{genres.map(({ name }) => name).join(', ')}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n        </div>\n      </div>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={location.state}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={location.state}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\n// Movie.propTypes = {\n//   movie: PropTypes.shape({\n//     title: PropTypes.string.isRequired,\n//     release_date: PropTypes.string.isRequired,\n//     overview: PropTypes.string.isRequired,\n//     poster_path: PropTypes.string,\n//     vote_average: PropTypes.number.isRequired,\n//     genres: PropTypes.array.isRequired,\n//   }).isRequired,\n// };","import { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport useFetchMovieInfo from 'hooks/useFetchMovieInfo';\n\nimport { Movie } from 'components/Movie/Movie';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MoviesDetails = () => {\n  const { movieInfo, isLoading, error } = useFetchMovieInfo();\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movieInfo && <Movie movie={movieInfo} />}\n      {error && <p>Ooops!</p>}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;"],"names":["axios","KEY","fetchTrendingMovies","params","api_key","data","results","map","id","title","url","poster_path","fetchMoviesByQuery","query","fetchMovieById","movieId","endpoint","response","useFetchMovieInfo","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","error","setError","useParams","useEffect","getMovie","movieDetails","message","Movie","movie","release_date","overview","vote_average","genres","location","useLocation","navigation","useNavigate","type","onClick","state","from","src","alt","Date","getFullYear","Math","round","name","join","to","Loader","Suspense","fallback"],"sourceRoot":""}